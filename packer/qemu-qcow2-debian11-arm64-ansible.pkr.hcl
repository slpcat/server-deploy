
variable "format" {
  type    = string
  default = "qcow2"
}

variable "password" {
  type    = string
  default = "packer"
}

variable "user" {
  type    = string
  default = "centos"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "qemu" "autogenerated_1" {
  accelerator       = "tcg"
  qemu_binary       = "qemu-system-aarch64"
  machine_type      = "virt"
  #boot_command      = ["<tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos7.ks<enter><wait>"]
  boot_wait         = "10s"
  disk_image        = true
  #use_backing_file  = true
  qemu_img_args {
    create = ["-F", "qcow2"]
  }

  cpus              = 2
  memory            = 1024
  firmware          = "QEMU_EFI.fd"
  disk_interface    = "virtio"
  disk_size         = 8192
  format            = "${var.format}"
  #http_directory    = "../http"
  iso_checksum      = "99eb3b41996dbd28b92ca78f7153a936b014fef4ea44c16181877e90eba8a48d648d96a8131777f545e0d4cc8d86a28e81def6ee884060574a1c89758c38f5ca"
  iso_url           = "https://cloud.debian.org/images/cloud/bullseye/20211011-792/debian-11-generic-arm64-20211011-792.qcow2"
  output_directory  = "build"
  headless          = true
  net_device        = "e1000"
  qemuargs          = [["-cpu", "max"], ["-nographic"], ["-cdrom", "cloud-init-imgs/debian-seed.img"]]
  shutdown_command  = "echo '${var.password}'|sudo -S shutdown -h now"
  ssh_password      = "${var.password}"
  ssh_username      = "${var.user}"
  ssh_wait_timeout  = "60m"
  vm_name           = "debian11-arm64-${local.timestamp}.${var.format}"
}

build {
  sources = ["source.qemu.autogenerated_1"]

  provisioner "shell" {
    expect_disconnect = false
    pause_before      = "20s"
    inline = [
      "sudo yum install -y python3 python3-pip",
      "sudo pip3 install -U pip",
      "sudo pip3 install netaddr pbr hvac jmespath ruamel.yaml",
      "sudo pip3 install ansible"
    ]
  }

  provisioner "ansible-local" {
    role_paths    = [
      "../roles/init-node-centos7",
      #"../roles/install-zabbix",
      "../roles/init-ali-k8s-centos7"
    ]
    group_vars    = "../group_vars"
    playbook_dir  = "../playbooks"
    playbook_file = "../playbooks/init-node-centos7-localhost.yml"
    #inventory_groups =
    #command =
    extra_arguments = [
      "-b -v"
      #"--vault-password-file=/bin/cat",
      #"user `ansible_extra_arguments`}}",
    #  "--extra-vars deploy_env=groupclass"
    ]
  }

  provisioner "shell" {
    expect_disconnect = false
    inline = [
      "echo === System Cleanup ===",
      "sudo rm -f /root/.bash_history",
      "sudo rm -f /home/${var.user}/.bash_history",
      "sudo rm -f /var/log/wtmp",
      "sudo rm -f /var/log/btmp",
      "sudo rm -rf /var/log/installer",
      "sudo rm -rf /var/lib/cloud/instances",
      "sudo rm -rf /tmp/* /var/tmp/* /tmp/.*-unix",
      "sudo find /var/cache -type f -delete",
      "sudo find /var/log -type f | while read f; do echo -n '' | sudo tee $f > /dev/null; done;",
      "sudo rm -rf /var/lib/cloud/*"
    ]
  }

}
