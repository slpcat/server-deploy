variable "access_key" {
  type    = string
  default = "${env("ALICLOUD_ACCESS_KEY")}"
}

variable "secret_key" {
  type    = string
  default = "${env("ALICLOUD_SECRET_KEY")}"
}

variable "ansible_vault_pass" {
  type    = string
  default = "${env("ANSIBLE_VAULT_PASS")}"
}

variable "ansible_playbook_file" {
  type    = string
  default = "${env("ANSIBLE_PLAYBOOK_FILE")}"
}

variable "ansible_playbook_dir" {
  type    = string
  default = "${env("ANSIBLE_PLAYBOOK_DIR")}"
}

variable "ansible_group_vars_dir" {
  type    = string
  default = "${env("ANSIBLE_GROUP_VARS_DIR")}"
}

variable "ansible_extra_arguments" {
  type    = string
  default = "${env("ANSIBLE_EXTRA_ARGUMENTS")}"
}

variable "ansible_extra_vars" {
  type    = string
  default = "${env("ANSIBLE_EXTRA_VARS")}"
}

source "alicloud-ecs" "autogenerated_1" {
  access_key           = "${var.access_key}"
  image_name           = "packer-basic-{{timestamp}}"
  instance_type        = "ecs.t6-c1m1.large"
  security_group_id    = "sg-2ze52dgp0qaym7ummry4"
  vpc_id               = "vpc-2zeafwou20df9llgjpf2f"
  vswitch_id           = "vsw-2zedzi5yinwr0hzfsrxn6"
  internet_charge_type = "PayByTraffic"
  io_optimized         = "true"
  region               = "cn-beijing"
  secret_key           = "${var.secret_key}"
  source_image         = "debian_10_10_x64_20G_alibase_20210824.vhd"
  ssh_username         = "root"
}

build {
  sources = ["source.alicloud-ecs.autogenerated_1"]
  provisioner "shell" {
    expect_disconnect = false
    pause_before      = "20s"
    inline = [
      "apt-get install -y python3 python3-pip",
      "pip3 install -U pip",
      "pip3 install netaddr pbr hvac jmespath ruamel.yaml",
      "pip3 install ansible"
    ]
  }
  provisioner "ansible-local" {
    role_paths    = [
      "../roles/init-node-debian11",
      #"../roles/install-zabbix",
      "../roles/init-ali-k8s-centos7"
    ]
    group_vars    = "../group_vars"
    playbook_dir  = "../playbooks"
    playbook_file = "../playbooks/init-node-debian11-alicloud.yml"
    #inventory_groups = 
    #command =
    #extra_arguments = [
      #"--vault-password-file=/bin/cat",
      #"user `ansible_extra_arguments`}}",
    #  "--extra-vars deploy_env=groupclass"
    #]
  }
}
